@use "stylesVars";
@use "stylesReset";
@use "stylesCanvas";
@use "vars" as *;
@use "@kth/style/scss/components/kpm";
@use "components/entrances.scss" as e;
@use "components/menu-item";

#kpm-6cf53 {
  pointer-events: none;
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  z-index: 9999;

  display: flex;
  flex-direction: column;
  align-items: center;

  font-family: "Figtree", sans-serif;
  font-size: 1rem;
  font-weight: 400;
  line-height: 1.5;

  @media print {
    display: none;
  }
}

#kpm-6cf53 .kth-kpm__container {
  width: 100%;
  pointer-events: all;
  gap: 0;
  overflow: hidden;
  // Overwrite KTH Style: minimum margin is `0rem` instead of `1rem`
  padding-inline: clamp(0rem, 3.33333vw, 2rem);
}

// Global styling
#kpm-6cf53 .kpm-modal {
  pointer-events: all;
  max-width: 1200px;
}

#kpm-6cf53 .kpm-modal-backdrop {
  pointer-events: all;
  position: absolute;
  z-index: -1;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: linear-gradient(rgba(0, 0, 0, 0.25), rgba(0, 0, 0, 0.45));
}

#kpm-6cf53 .kpm-row {
  display: flex;
  flex-flow: row wrap;
  width: 100%;
}

#kpm-6cf53 .kpm-col {
  display: flex;
  flex-flow: column nowrap;
  justify-content: flex-start;
  flex-grow: 1;

  .kpm-col-header {
    font-size: 1.17em;
    font-weight: bold;
    margin-bottom: var(--kpmMargin);
  }
}
@media #{$mblBreakpoint} {
  #kpm-6cf53 .kpm-col {
    margin-top: 1em;
    margin-bottom: 1em;
    flex-basis: 100%;
  }
}

#kpm-6cf53 .kpm-modal button.kpm-button,
#kpm-6cf53 .kpm-modal a.kpm-button {
  display: flex;
  padding: calc(var(--kpmPad)) calc(3 * var(--kpmPad));
  border-radius: var(--kpmButtonRadius);
  color: var(--kpmButtonText);
  background-color: var(--kpmButtonBg);
  border: 2px solid var(--kpmButtonFg);
  text-decoration: none;

  &:hover {
    color: var(--kpmButtonHoverText);
    background-color: var(--kpmButtonHoverBg);
    border-color: var(--kpmButtonHoverFg);
    text-decoration: none;
    cursor: pointer;
  }

  &.kpm-button-primary {
    --kpmButtonBg: var(--kpmPaneFg);
    --kpmButtonFg: var(--kpmPaneBg);
    --kpmButtonText: var(--kpmPaneBg);
  }

  &.kpm-button-link {
    --kpmButtonBg: var(--kpmPaneBg);
    --kpmButtonHoverBg: var(--kpmPaneBg);
    --kpmButtonFg: var(--kpmPaneBg);
    --kpmButtonHoverFg: var(--kpmPaneBg);
    --kpmButtonText: var(--kpmPaneFg);
    --kpmButtonHoverText: var(--kpmPaneText);
    padding: calc(var(--kpmPad) / 2) 0;
    margin: calc(var(--kpmPad) / 2) 0;
    border: 1px solid var(--kpmButtonBg);
    border-radius: 0;
    &:hover {
      border-bottom-color: var(--kpmButtonHoverText);
    }
  }
}

// "Login" link when user is logged out
#kpm-6cf53 .kpm-login {
  margin-inline-start: auto;
  margin-inline-end: 0.25rem;
}

// Typography in menu panes
#kpm-6cf53 .kpm-modal-content {
  padding: calc(2 * var(--kpmPad));

  h1 {
    margin-top: 0;
  }

  ul {
    margin: 0;
    padding: 0;
  }

  li {
    list-style: none;
    margin-bottom: var(--kpmMargin);
  }

  a.icon {
    color: var(--kpmLink);
    text-decoration: none;
    line-height: 1em;

    &:hover {
      color: var(--kpmLinkHover);
      text-decoration: underline;
    }
  }

  .kpm-muted-text {
    padding-top: 0.1em;
    color: var(--kpmPaneTextMuted);
    font-size: 0.9em;
  }
}

// This is used to detect css-breakpoints from TS-code
// See function isOnMobileBp()
#kpm-6cf53:before {
  content: "desktop";
  visibility: hidden;
  position: absolute;
  width: 0;
  height: 0;
}

@media #{$mblBreakpoint} {
  #kpm-6cf53:before {
    content: "mobile";
  }
}

@media #{$desktopLargeBreakpoint} {
  #kpm-6cf53:before {
    content: "desktop-large";
  }
}
